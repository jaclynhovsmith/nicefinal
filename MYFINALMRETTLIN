float t;

void setup(){
  background(30);
  size(500, 500);
  colorMode(HSB, 360, width, height);
}

void draw(){
  background(30);
  backdrop();
  smooth();
  stroke(t % 360, 450, 450);
  strokeWeight(2);
  translate(width/2, height/2);
  for(int i=0; i< 50; i++){
    line(x1(t+i), y1(t+i), x2(t+i), y2(t+i));
  } 
  smooth();
  stroke((t + 180) % 360, 450, 450);
  strokeWeight(2);
  //translate(width/2, height/2);
  for(int i=0; i< 50; i++){
    line(bx1(t+i), by1(t+i), bx2(t+i), by2(t+i));
  } 
  t++;
}

float x1(float t){
  return sin(t/30) * 200 - cos(t/15) * 45 + cos(t/69) + 40;
}

float y1(float t){
  return sin(t / 15) * 100 - sin(t/40) * 150;
}

float y2(float t){
  return -sin(t/5) * 50 + cos(t/20) * 100 + sin(t/30) * 75;
}

float x2(float t){
  return cos(t/50) * 100 + cos(t/65) * 200 - sin(t/17) * 45;
}

float bx1(float t){
  return cos(t/30) * 200 - sin(t/15) * 45 + sin(t/69) + 40;
}

float by1(float t){
  return cos(t / 15) * 100 - sin(t/40) * 150;
}

float by2(float t){
  return -cos(t/5) * 50 + sin(t/20) * 100 + cos(t/30) * 75;
}

float bx2(float t){
  return sin(t/50) * 100 + sin(t/65) * 200 - cos(t/17) * 45;
}

void backdrop(){
  loadPixels();
for (int x = 0; x < width; x+= 2) {
  for (int y = 0; y < height; y+= 2) {
    float bright = random(255);
    pixels[x+y*width] = color(bright, bright, bright);
  }
}
updatePixels();
}
